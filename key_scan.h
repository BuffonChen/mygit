/*
 * WARNING! This file is auto-generated by the CSR remote-control code generator application.
 * Changes made to this file will be overwritten if the generator application is re-used.
 */

#ifndef _KEYSCAN_H
#define _KEYSCAN_H

#include <types.h>

#include "configuration.h"

/*=============================================================================
 *  Public Definitions
 *============================================================================*/

#define SCAN_MATRIX_ROWS            (3)
#define SCAN_MATRIX_COLUMNS         (5)
#define SCAN_MATRIX_ROWS_BYTE_COUNT (SCAN_MATRIX_ROWS + (SCAN_MATRIX_ROWS % 2))
#define SCAN_MATRIX_SIZE            ((SCAN_MATRIX_ROWS_BYTE_COUNT * 8) + 1) /* (Number of keys * bits per byte) + empty zero scan code */
#define SCAN_MATRIX_BUTTON_DATA_LEN_BYTES   (SCAN_MATRIX_ROWS_BYTE_COUNT >> 1)

/* The supported button types */
typedef enum {
    BUTTON_UNKNOWN,
    BUTTON_CONSUMER,        /* A button to be transmitted using the HID consumer page */
} BUTTON_TYPE;

/* This structure contains the interpretation of the button scan input */
typedef struct
{
    /* The type of button being considered */
    BUTTON_TYPE pressedButtonType;
    /* Number of Consumer Page buttons pressed */
    uint8 numPressedConsumerKeys;
} BUTTON_SCAN_T;

/* Identify function buttons */
#define IS_FUNCTION_BUTTON              (0x8000)



/* Function button identifiers */
#define FUNCTION_BUTTON_1               (0x8001)
#define FUNCTION_BUTTON_2               (0x8002)
#define FUNCTION_BUTTON_3               (0x8003)
#define FUNCTION_BUTTON_4               (0x8004)
#define FUNCTION_BUTTON_5               (0x8005)
#define FUNCTION_BUTTON_6               (0x8006)
#define FUNCTION_BUTTON_7               (0x8007)
#define FUNCTION_BUTTON_8               (0x8008)

/*=============================================================================
 * KEY LOOK-UP MATRIX
 *============================================================================*/
#define DECLARE_KEY_MATRIX()	\
	static uint16 RemoteKeyMatrix[] = {\
		0x00,	/* 0 (not used) */	\
		\
		/* Byte (row) 1 */	\
		0x0030,	/* R1C1 Power */	\
		0x0044,	/* R1C2 Menu Left */	\
		0x0000,	/* R1C3 (disabled) */	\
		0x0223,	/* R1C4 AC Home */	\
		0x00e9,	/* R1C5 Volume Up */	\
		0x0000,	/* R1C6 (not used) */	\
		0x0000,	/* R1C7 (not used) */	\
		0x0000,	/* R1C8 (not used) */	\
		\
		/* Byte (row) 2 */	\
		0x0042,	/* R2C1 Menu Up */	\
		0x0041,	/* R2C2 Menu Pick */	\
		0x0043,	/* R2C3 Menu Down */	\
		0x0224,	/* R2C4 AC Back */	\
		0x0000,	/* R2C5 (disabled) */	\
		0x0000,	/* R2C6 (not used) */	\
		0x0000,	/* R2C7 (not used) */	\
		0x0000,	/* R2C8 (not used) */	\
		\
		/* Byte (row) 3 */	\
		0x0000,	/* R3C1 (disabled) */	\
		0x0045,	/* R3C2 Menu Right */	\
		0x0000,	/* R3C3 (disabled) */	\
		0x0040,	/* R3C4 Menu */	\
		0x00ea,	/* R3C5 Volume Down */	\
		0x0000,	/* R3C6 (not used) */	\
		0x0000,	/* R3C7 (not used) */	\
		0x0000,	/* R3C8 (not used) */	\
		\
		/* Byte (row) 4 */	\
		0x0000,	/* R4C1 (not used) */	\
		0x0000,	/* R4C2 (not used) */	\
		0x0000,	/* R4C3 (not used) */	\
		0x0000,	/* R4C4 (not used) */	\
		0x0000,	/* R4C5 (not used) */	\
		0x0000,	/* R4C6 (not used) */	\
		0x0000,	/* R4C7 (not used) */	\
		0x0000,	/* R4C8 (not used) */	\
	}


/*=============================================================================
 *  Public Function Prototypes
 *============================================================================*/
/* Initialise the key-scan module: */
extern void keyscanInit(void);
/* Process the report from the PIO controller: */
extern void keyscanProcessScanReport(uint8* scan_report, uint8* hid_report, BUTTON_SCAN_T* button_info);

#endif /* _KEYSCAN_H */
